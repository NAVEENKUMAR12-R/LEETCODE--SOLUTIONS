class Solution {
public:
    int search(vector<int>& nums, int target) {
        if (nums.empty()) {
            return -1; // or throw an exception, depending on your preference
        }
        int s = 0;
        int e = nums.size() - 1; // corrected the end index
        while (s <= e) {
            int m = s + (e - s) / 2; // corrected the midpoint calculation
            if (nums[m] == target) {
                return m;
            } else if (nums[m] < target) {
                s = m + 1;
            } else {
                e = m - 1;
            }
        }
        return -1;
    }
};
